Une estos días script corrige quita y reemplaa lo que tengas que reemplazar para que pued a funcionr y recuperar las fotos y nombre de usuario logueado actualmente, 




// Cambios de estado de autenticación
    onAuthStateChanged(auth, async (user) => { 
        if (user) {
            document.querySelector('.login-container').style.display = 'none';
            document.querySelector('.home-container').style.display = 'block';

            // Recuperar datos del usuario
            const userDoc = doc(firestore, `users/${user.uid}`);
            const docSnapshot = await getDoc(userDoc);
            if (docSnapshot.exists()) {
                const userData = docSnapshot.data();
                document.getElementById('userName').textContent = userData.name || 'RETOM';
                
                // Set user profile picture
                const profilePic = document.getElementById("profilePicture");
                if (userData.photoURL) {
                    const profileRef = ref(storage, userData.photoURL);
                    getDownloadURL(profileRef).then((url) => {
                        profilePic.src = url;
                    }).catch((error) => {
                        console.error("Error getting profile picture URL: ", error);
                    });
                } else {
                    profilePic.src = "default-profile.jpg"; // Default image
                }
            }



Agregaselo al siguiente script:



<script type="module">
        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-app.js";
        import { getFirestore, collection, getDocs } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-firestore.js";
        import { getAuth, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-auth.js";
        import { getStorage, ref, getDownloadURL } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-storage.js";

        const firebaseConfig = {
            apiKey: "AIzaSyCFfkmEDjqAwJNtnKByRQNt9NUQs5UdNa0",
            authDomain: "rrhh-ee7e3.firebaseapp.com",
            projectId: "rrhh-ee7e3",
            storageBucket: "rrhh-ee7e3.appspot.com",
            messagingSenderId: "605891607617",
            appId: "1:605891607617:web:daedbd7b7b7b5a8b901ac0",
            measurementId: "G-Q801R9M95S"
        };

        const app = initializeApp(firebaseConfig);
        const db = getFirestore(app);
        const auth = getAuth(app);
        const storage = getStorage(app);

        async function cargarPerfil() {
            onAuthStateChanged(auth, async (user) => {
                if (user) {
                    document.getElementById("username").innerText = user.displayName || "Usuario";
                    const profileImageRef = ref(storage, `profileImages/${user.uid}.jpg`);
                    getDownloadURL(profileImageRef)
                        .then((url) => {
                            document.getElementById("profileImage").src = url;
                        })
                        .catch((error) => console.error("Error al cargar imagen:", error));
                }
            });
        }

        async function cargarConsumos() {
            const querySnapshot = await getDocs(collection(db, "consumoRondas"));
            const consumosPorFecha = {};
            const consumoPorLugar = {};

            querySnapshot.forEach((docSnapshot) => {
                const data = docSnapshot.data();
                const historial = data.historial || [];
                const lugar = data.lugar;

                historial.forEach((entry) => {
                    const fecha = new Date(entry.fecha).toLocaleDateString();
                    const consumo = entry.consumo || 0;

                    consumosPorFecha[fecha] = (consumosPorFecha[fecha] || 0) + consumo;
                    consumoPorLugar[lugar] = (consumoPorLugar[lugar] || 0) + consumo;
                });
            });

            return { consumosPorFecha, consumoPorLugar };
        }

        async function renderizarGraficos() {
            const { consumosPorFecha, consumoPorLugar } = await cargarConsumos();

            const fechas = Object.keys(consumosPorFecha);
            const consumos = Object.values(consumosPorFecha);

            const lugares = Object.keys(consumoPorLugar);
            const consumosLugar = Object.values(consumoPorLugar);

            const ctxFecha = document.getElementById("consumoChart").getContext("2d");
            new Chart(ctxFecha, {
                type: "bar",
                data: {
                    labels: fechas,
                    datasets: [{
                        label: "Consumo Total",
                        data: consumos,
                        backgroundColor: 'rgba(90, 103, 216, 0.5)',
                        borderColor: 'rgba(90, 103, 216, 1)',
                        borderWidth: 1
                    }]
                },
                options: { responsive: true }
            });

            const ctxLugar = document.getElementById("lugarChart").getContext("2d");
            new Chart(ctxLugar, {
                type: "bar",
                data: {
                    labels: lugares,
                    datasets: [{
                        label: "Consumo por Lugar",
                        data: consumosLugar,
                        backgroundColor: consumosLugar.map((c) =>
                            c < Math.max(...consumosLugar) * 0.3 ? "red" :
                            c > Math.max(...consumosLugar) * 0.7 ? "green" : "orange"
                        ),
                        borderWidth: 1
                    }]
                },
                options: { responsive: true }
            });
        }

        cargarPerfil();
        renderizarGraficos();
    </script>
